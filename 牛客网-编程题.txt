牛客网  编程题  

（0001）.  魔法币问题
     问题描述：
小易准备去魔法王国采购魔法神器小易准备去魔法王国采购魔法神器,购买魔法神器需要使用魔法币,但是小易现在一枚魔法币都没有,但是小易有两台魔法机器可以通过投入x(x可以为0)个魔法币产生更多的魔法币。
魔法机器1:如果投入x个魔法币,魔法机器会将其变为2x+1个魔法币
魔法机器2:如果投入x个魔法币,魔法机器会将其变为2x+2个魔法币
小易采购魔法神器总共需要n个魔法币,所以小易只能通过两台魔法机器产生恰好n个魔法币,小易需要你帮他设计一个投入方案使他最后恰好拥有n个魔法币。

输入：输入包括一行,包括一个正整数n(1 ≤ n ≤ 10^9),表示小易需要的魔法币数量。
输出：输出一个字符串,每个字符表示该次小易选取投入的魔法机器。其中只包含字符'1'和'2'。

输入例子：
    10

输出例子：
    122
	

思路：
     1. 从后往前推，就很简单
	 2. 如果n为偶数，则最后一次通过必然是机器2 ；
	    如果n为奇数，则通过的必然是机器1 ；
	    依次类推
     3. 将通过的机器数字2或者1  压栈 stack.push();
	 4. 最后输出的时候， 出栈 stack.pop();
代码：
    import java.util.Scanner;
    import java.util.Stack;
    public class Main{
       public static void main(String[] args){
         Scanner sc=new Scanner(System.in);
         int n=sc.nextInt();
         //从后往前推
         Stack s=new Stack();
         while(n!=0){
            if(n%2==0){
                //如果n是偶数，则最后一次肯定是通过的机器2
                s.push(2);
                n=(n-2)/2;
            }else{
                s.push(1);
                n=(n-1)/2;
            }
        }
        while(!s.empty()){
            System.out.print(s.pop());
        }
   }
}


***************************************************************************************************************************************
****************************************************************************************************************************************




（0002）  相反数
     问题描述:
	    为了得到一个数的"相反数",我们将这个数的数字顺序颠倒,然后再加上原先的数得到"相反数"。例如,为了得到1325的"相反数",首先我们将该数的数字顺序颠倒,我们得到5231,之后再加上原先的数,我们得到5231+1325=6556.如果颠倒之后的数字有前缀零,前缀零将会被忽略。例如n = 100, 颠倒之后是1.
		
输入描述：
     输入包括一个整数n，（1<=n<=10^5）
	 
输出描述：
     输出一个整数，表示n的相反数
	 
输入例子：
    1325
输出例子：
    6556
	
思路： 
    顺序颠倒，就是把每一位都取出来  n%10 是取余数 ；
	                                n/10 是取商 ；
	把取出来的数怎么存？存在哪里？
	考虑到可能有重复，用一个list来存
	取出来的数*（10^n） :10^n 在java中怎么表示？  ：Math.pow(10,n) ;
	
代码：
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;
import java.util.Stack;

public class Main {
    public static void main(String[] args){
        Scanner sc=new Scanner(System.in);
        int n=sc.nextInt();
        List<Integer> list=new ArrayList<>();
        int result=n;
        while(n!=0){
            list.add(n%10);
            n=n/10;
        }
        for(int i=0; i<list.size(); i++){
                result+=list.get(i)*((int) Math.pow(10,list.size()-i-1));
        }
        System.out.println(result);
    }

    }
